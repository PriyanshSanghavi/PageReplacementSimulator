<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:layout_margin="5dp"
    tools:context=".PRDetail1">
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical">
    <ImageView
        android:layout_width="match_parent"
        android:layout_height="220dp"
        android:scaleType="fitStart"
        android:src="@drawable/pra"/>
        <LinearLayout
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:orientation="horizontal">
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"
        android:text="Page Replacement Algorithm "
        android:fontFamily="@font/title"
        android:textStyle="bold"
        android:layout_marginBottom="15dp"
        android:textSize="28dp"/>
        <ImageView
            android:layout_width="50dp"
            android:layout_height="50dp"
            android:id="@+id/pra"
            android:layout_marginTop="7dp"
            android:src="@drawable/ab"/>
        </LinearLayout>
    <com.uncopt.android.widget.text.justify.JustifiedTextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Page replacement is referred to a scenario in which a page from the main memory should be replaced by a page from secondary memory. Page replacement occurs due to page faults. The various page replacement algorithms like FIFO, OPR, LRU and LIFO help the operating system to decide which page to replace. Page replacement is needed in the operating systems that use virtual memory using Demand Paging."
        android:fontFamily="@font/paragraph"
        android:textSize="25dp" />
        <RelativeLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content">
        <ImageView
            android:layout_width="340dp"
            android:layout_height="260dp"
            android:layout_marginTop="10dp"
            android:scaleType="fitStart"
            android:visibility="gone"
            android:id="@+id/img_ps"
            android:layout_gravity="center"
            android:src="@drawable/ps"/>
            <ImageView
                android:layout_width="50dp"
                android:layout_height="50dp"
                android:id="@+id/pralm"
                android:visibility="gone"
                android:layout_alignParentRight="true"
                android:layout_marginTop="7dp"
                android:src="@drawable/ab"/>
        </RelativeLayout>
        <com.uncopt.android.widget.text.justify.JustifiedTextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:visibility="gone"
            android:layout_marginTop="10dp"
            android:id="@+id/txt2"
            android:text="As with the case in Demand Paging, only certain pages of a process are loaded initially into the memory. This allows us to get more processes into memory at the same time. But what happens when a process requests for more pages and no free memory is available to bring them in? Following steps can be taken to deal with this problem:"
            android:fontFamily="@font/paragraph"
            android:textSize="25dp" />
        <com.uncopt.android.widget.text.justify.JustifiedTextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:visibility="gone"
            android:id="@+id/txt3"
            android:text="1.	Put the process in the wait queue, until any other process finishes its execution thereby freeing frames."
            android:fontFamily="@font/paragraph"
            android:textSize="25dp" />
        <com.uncopt.android.widget.text.justify.JustifiedTextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:visibility="gone"
            android:id="@+id/txt4"
            android:text="2.	Or, remove some other process completely from the memory to free frames."
            android:fontFamily="@font/paragraph"
            android:textSize="25dp" />
        <com.uncopt.android.widget.text.justify.JustifiedTextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:visibility="gone"
            android:id="@+id/txt5"
            android:text="3.	Or, find some pages that are not being used right now, move them to the disk to get free frames. This technique is called Page replacement and is most commonly used."
            android:fontFamily="@font/paragraph"
            android:textSize="25dp" />
        <com.uncopt.android.widget.text.justify.JustifiedTextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:visibility="gone"
            android:id="@+id/txt6"
            android:text="In this case, if a process requests a new page and supposes there are no free frames, then the Operating system needs to decide which page to replace. The operating system must use any page replacement algorithm in order to select the victim frame. The Operating system must then write the victim frame to the disk then read the desired page into the frame and then update the page tables. And all these require double the disk access time."
            android:fontFamily="@font/paragraph"
            android:textSize="25dp" />
        <com.uncopt.android.widget.text.justify.JustifiedTextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:visibility="gone"
            android:id="@+id/txt7"
            android:text="•	Page replacement prevents the over-allocation of the memory by modifying the page-fault service routine."
            android:textSize="25dp" />
        <com.uncopt.android.widget.text.justify.JustifiedTextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:visibility="gone"
            android:id="@+id/txt8"
            android:text="•	To reduce the overhead of page replacement a modify bit (dirty bit) is used in order to indicate whether each page is modified."
            android:textSize="25dp" />
        <com.uncopt.android.widget.text.justify.JustifiedTextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:visibility="gone"
            android:id="@+id/txt9"
            android:text="•	This technique provides a complete separation between logical memory and physical memory."
            android:textSize="25dp" />
        <Button
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:background="@drawable/btn_style"
            android:layout_gravity="center"
            android:layout_marginTop="20dp"
            android:text="Learn More"
            android:id="@+id/btn"
            android:paddingLeft="10dp"
            android:paddingRight="10dp"
            android:textColor="#FFFFFF"/>
    </LinearLayout>
</ScrollView>